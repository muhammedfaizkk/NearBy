[{"D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\index.js":"1","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\App.js":"2","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\redux\\store.js":"3","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\redux\\userSlice.js":"4","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\utils\\ProtectedRoute.js":"5","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\Home.jsx":"6","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\Footerres.jsx":"7","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\redux\\restuarantsSlice.js":"8","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\Navbares.jsx":"9","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\AddresHome.jsx":"10","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\AddresSignup.jsx":"11","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\AddresLogin.jsx":"12","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\Myrestaurants.jsx":"13","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\Restuarantdetais.jsx":"14","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\Addrestaurant.jsx":"15","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\UserProfile.jsx":"16","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\UpdateRestaurants.jsx":"17","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\UsersList.jsx":"18","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\Cards.jsx":"19","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\Riviewsection.jsx":"20"},{"size":357,"mtime":1706090695445,"results":"21","hashOfConfig":"22"},{"size":2259,"mtime":1710135058560,"results":"23","hashOfConfig":"22"},{"size":270,"mtime":1706866935133,"results":"24","hashOfConfig":"22"},{"size":728,"mtime":1707909257497,"results":"25","hashOfConfig":"22"},{"size":256,"mtime":1706767868018,"results":"26","hashOfConfig":"22"},{"size":2786,"mtime":1710145134998,"results":"27","hashOfConfig":"22"},{"size":1748,"mtime":1710146786972,"results":"28","hashOfConfig":"22"},{"size":547,"mtime":1707202604406,"results":"29","hashOfConfig":"22"},{"size":3745,"mtime":1710152791754,"results":"30","hashOfConfig":"22"},{"size":3354,"mtime":1707737643040,"results":"31","hashOfConfig":"22"},{"size":7171,"mtime":1707719554000,"results":"32","hashOfConfig":"22"},{"size":5808,"mtime":1710139443089,"results":"33","hashOfConfig":"22"},{"size":1712,"mtime":1707719851266,"results":"34","hashOfConfig":"22"},{"size":2778,"mtime":1710144592391,"results":"35","hashOfConfig":"22"},{"size":10332,"mtime":1710153617279,"results":"36","hashOfConfig":"22"},{"size":5958,"mtime":1707397700336,"results":"37","hashOfConfig":"22"},{"size":9465,"mtime":1707478617771,"results":"38","hashOfConfig":"22"},{"size":2926,"mtime":1710142211574,"results":"39","hashOfConfig":"22"},{"size":2765,"mtime":1710145470207,"results":"40","hashOfConfig":"22"},{"size":199,"mtime":1709957840442,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ab7kdi",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},"D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\index.js",[],[],"D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\App.js",[],[],"D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\redux\\store.js",[],[],"D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\redux\\userSlice.js",[],[],"D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\utils\\ProtectedRoute.js",[],[],"D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\Home.jsx",["111","112"],[],"\r\nimport { Container, Row, Col, Button } from 'react-bootstrap'\r\nimport background from '../images/nordwood-themes-mue4Jwr-N5M-unsplash.jpg'\r\nimport Cards from './Cards'\r\nimport { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getResdetails } from '../redux/restuarantsSlice'\r\n\r\nfunction Home() {\r\n    const resdata = useSelector((state) => state?.restuarants?.resData?.resData);\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        const getRestuarants = async () => {\r\n            try {\r\n                const res = await axios.get('http://localhost:5000/getAllres')\r\n                dispatch(getResdetails(res.data))\r\n            } catch (error) {\r\n                alert(error.message)\r\n            }\r\n        }\r\n        getRestuarants()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col className='p-0'>\r\n                        <div className='background-img'>\r\n                            <img src={background} alt=\"\" />\r\n                            <div className='content-back'>\r\n                                <div className='abslt-cnt'>\r\n\r\n                                    <h2>Let food be thy medicine and   <br /> medicine\r\n                                        be thy food</h2>\r\n                                    <h5>\r\n                                        Although the skills arenâ€™t hard to learn, finding the happiness <br /> and finding the satisfaction and finding fulfillment <br /> in continuously serving somebody else something good to eat\r\n                                    </h5>\r\n                                </div>\r\n                                <div>\r\n                                    <Button variant=\"info\">Book online</Button>{' '}\r\n                                    <Button variant=\"outline-info\">See More</Button>{' '}\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n\r\n\r\n                    {resdata &&\r\n                        resdata.map((element, index) => (\r\n                            <Col lg={4} md={6} key={index}>\r\n                                <div className='card-par'>\r\n                                    <Cards resName={element.resName} photographs={element.photographs} neighborhood={element.neighborhood} location={element.location} id={element._id} index={index} />\r\n                                </div>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n\r\n\r\n\r\n                </Row>\r\n\r\n\r\n            </Container >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\Footerres.jsx",[],[],"D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\redux\\restuarantsSlice.js",[],[],"D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\Navbares.jsx",["113"],[],"import React from 'react'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./style.css\"\r\nimport profImg from '../images/icons8-user-100.png'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Cookies from 'js-cookie';\r\nimport { deleteUser } from '../redux/userSlice';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\n\r\nfunction Navbares() {\r\n    const dispatch = useDispatch()\r\n    const yourInlineStyles = {\r\n        display: 'flex',\r\n        textDecoration: 'none',\r\n        alignItems: 'center',\r\n        color: 'white'\r\n    };\r\n    const yourInlineStyle = {\r\n        display: 'flex',\r\n        textDecoration: 'none',\r\n        color: 'white'\r\n    };\r\n    const userData = useSelector((state) => state?.users ?? 'Not available');\r\n    const isAuth = userData && userData.isAuth;\r\n\r\n    const userName = userData?.user?.userDetails?.userName;\r\n\r\n    const logOut = () => {\r\n        Cookies.remove(\"token\")\r\n        dispatch(deleteUser(''))\r\n    }\r\n    return (\r\n        <div className='nav-main text-white'>\r\n            <Navbar expand=\"lg\" className=\"nav-parent\" >\r\n                <Container>\r\n                    <Navbar.Brand href=\"#home\">\r\n                        <div className='nav-logo-section'>\r\n                            <span className='nav-logo'>Near</span><span className='text-info'>By</span>\r\n                        </div>\r\n                    </Navbar.Brand>\r\n                    <div className='prof-menuIcon' style={{ display: 'flex', alignItems: \"center\" }}>\r\n                        <img src=\"\" alt=\"\" />\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" style={{ height: '50px', backgroundColor: 'white !important' }} />\r\n\r\n                    </div>\r\n\r\n\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"me-auto \">\r\n                            <Link to={'/'} style={yourInlineStyles} className='text-white'><b>Home</b></Link>\r\n\r\n                            <Nav.Link className='text-white'><b>Menu</b></Nav.Link>\r\n                            <Nav.Link className='text-white'><b>Gallery</b></Nav.Link>\r\n                            <Link style={yourInlineStyles} className='text-white'><b>Contact</b></Link>\r\n                            {isAuth && <Link className='Link text-white' to={'/dashboard'}><b>Dashboard</b></Link>}\r\n\r\n                        </Nav>\r\n\r\n                        <div className='nav-end-section'>\r\n                            <div>\r\n\r\n                                {isAuth ?\r\n\r\n                                    <div className='nav-logout'>\r\n                                        <Button className='btn btn-info' onClick={logOut} >Logout</Button>\r\n                                        {/* <Link className='btn btn-dark ' onClick={logOut} style={yourInlineStyle}>Logout</Link> */}\r\n                                        <div className='nav-profsection'>\r\n                                            <img src={profImg} className='profimg' alt=\"Profile\" />\r\n                                            <span className='profilName'><b>{userName}</b></span>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                    :\r\n\r\n                                    <Button className='btn btn-info' as={Link} to={'/login'}>Login</Button>\r\n\r\n                                }\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </Navbar.Collapse>\r\n\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbares\r\n","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\AddresHome.jsx",[],[],"D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\AddresSignup.jsx",[],[],"D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\AddresLogin.jsx",["114"],[],"import React, { useState } from 'react'\r\nimport './style.css'\r\nimport user from './images/icons8-username-30.png'\r\nimport password from './images/icons8-password-24.png'\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { userAuth } from '../redux/userSlice';\r\nimport { ToastContainer, toast, Bounce } from 'react-toastify';\r\n\r\nfunction AddresLogin() {\r\n\r\n    const notify = () => {\r\n        toast.success('Login successful !!!', {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            transition: Bounce,\r\n        });\r\n    };\r\n\r\n\r\n    const [formErr, formSetErr] = useState({});\r\n    const [isSubmited, setSubmit] = useState(false);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch()\r\n    const [input, setInput] = useState({\r\n        userName: \"\",\r\n        password: \"\",\r\n    })\r\n    const isAuth = useSelector((state) => state.users.isAuth);\r\n    const navigateNext = (status) => {\r\n        if (status.success) {\r\n            notify();\r\n            dispatch(userAuth(status));\r\n            setTimeout(async () => {\r\n                navigate('/');\r\n            }, 2999);\r\n        } else {\r\n            alert(\"Invalid password or username\");\r\n        }\r\n    };\r\n\r\n\r\n    const HandleInputChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        setInput({ ...input, [name]: value });\r\n\r\n    }\r\n    const validateForm = (values) => {\r\n        const errors = {};\r\n        var usernamePattern = /^[a-zA-Z]{5,20}_?[a-zA-Z]*$/;\r\n        var passwordPattern = /^\\d{8}$/;\r\n\r\n        if (!values.userName) {\r\n            errors.userName = \"Username is required\"\r\n        }\r\n        else if (!usernamePattern.test(values.userName)) {\r\n            errors.userName = \"Username must be 3-20 characters and can only contain letters\"\r\n        }\r\n\r\n        if (!values.password) {\r\n            errors.password = \"password is required\"\r\n        }\r\n\r\n        else if (!passwordPattern.test(values.password)) {\r\n\r\n\r\n            errors.password = \"Enter 8 digit\"\r\n\r\n        }\r\n        return errors\r\n    }\r\n    const formSumit = async () => {\r\n        if (Object.keys(formErr).length === 0 && isSubmited) {\r\n\r\n            try {\r\n                const res = await axios.post(\"http://localhost:5000/login\", input, {\r\n                    withCredentials: true\r\n                });\r\n                navigateNext(res.data);\r\n\r\n            }\r\n            catch {\r\n                toast.error('Error during login', {\r\n                    position: \"top-center\",\r\n                    autoClose: 3000,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"light\",\r\n                    transition: Bounce,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const HandleSubmit = (e) => {\r\n        e.preventDefault();\r\n        formSetErr(validateForm(input));\r\n        setSubmit(true)\r\n        formSumit();\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='Signup'>\r\n\r\n            <ToastContainer />\r\n            <div className='Signup-sub'>\r\n                <form action=\"\" onSubmit={HandleSubmit}>\r\n\r\n                    <div className='input-sty-prnt'>\r\n                        <div className='sing-head'>\r\n                            <h1>Welcome Back</h1>\r\n                            <p><b>Enter your credential to login</b></p>\r\n                        </div>\r\n                        <div className='input-sty'>\r\n                            <label htmlFor=\"\" style={{ 'textAlign': 'center' }}><b>User name</b></label>\r\n                            <div className='img-inp'>\r\n                                <img className='iconsLo' src={user} alt=\"\" />\r\n                                <input type=\"text\"\r\n                                    value={input.userName}\r\n                                    name='userName'\r\n                                    onChange={HandleInputChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <span className='error-message'>{formErr.userName}</span>\r\n                        <div className='input-sty'>\r\n                            <label htmlFor=\"\" style={{ 'textAlign': 'center' }}><b>Password</b></label>\r\n                            <div className='img-inp'>\r\n                                <img className='iconsLo' src={password} alt=\"\" />\r\n                                <input type=\"password\"\r\n                                    value={input.password}\r\n                                    name='password'\r\n                                    onChange={HandleInputChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <span className='error-message'>{formErr.password}</span>\r\n                    </div>\r\n                    <div className='fgt-pass'>\r\n                        <p><b>Forgot password?</b></p>\r\n                    </div>\r\n                    <div className='endSection'>\r\n                        <Button variant=\"dark\" type='sumit'>Login</Button>\r\n                        <p>Dont have an account? <Link to={'/signup'}><b>signup</b></Link></p>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddresLogin\r\n","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\Myrestaurants.jsx",["115"],[],"import axios from 'axios'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getMyrestaurant } from '../redux/restuarantsSlice'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport Cards from './Cards'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n// import { useLocation } from 'react-router-dom';\r\n\r\nfunction Myrestaurants() {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const userId = useSelector((state) => state?.users?.user?.userDetails?.userId ?? 'not Available')\r\n    const myresData = useSelector((state) => state?.restuarants?.myRes ?? 'not Available')\r\n    useEffect(() => {\r\n        getMyrestaurants()\r\n    }, [])\r\n\r\n    const getMyrestaurants = async () => {\r\n        try {\r\n            const myRestaurants = await axios.get(`http://localhost:5000/myRestaurants/${userId}`, { withCredentials: true });\r\n            dispatch(getMyrestaurant(myRestaurants?.data?.myRestaurants ?? []))\r\n\r\n        } catch (error) {\r\n            alert(error.message)\r\n        }\r\n    }\r\n    return (\r\n        <Container>\r\n            <Row>\r\n\r\n                {myresData &&\r\n                    myresData.map((element, index) => (\r\n\r\n                        <Col lg={4} md={6} key={index}>\r\n                            <div className='card-par'>\r\n                                <Cards resName={element.resName} photographs={element.photographs} neighborhood={element.neighborhood} location={element.location} id={element._id} index={index} />\r\n                            </div>\r\n                        </Col>\r\n                    ))\r\n                }\r\n\r\n\r\n\r\n            </Row>\r\n        </Container>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Myrestaurants\r\n","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\Restuarantdetais.jsx",[],[],"D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\Addrestaurant.jsx",["116"],[],"import React, { useState } from 'react'\r\nimport './style.css'\r\nimport { useSelector } from 'react-redux'\r\nimport resImg from './images/icons8-restaurant-48 (1).png'\r\nimport resNei from './images/icons8-email-30.png'\r\nimport vegorNonveg from './images/icons8-yes-or-no-100.png'\r\nimport desImg from './images/icons8-description-64.png'\r\nimport LocaImg from './images/icons8-location-64.png'\r\nimport fileImg from './images/icons8-file-64.png'\r\nimport axios from 'axios';\r\nimport Button from 'react-bootstrap/Button';\r\nimport add from '../images/icons8-add-48.png'\r\nimport { ToastContainer, toast, Bounce } from 'react-toastify';\r\nimport { useNavigate } from 'react-router-dom'\r\nfunction Addrestaurant() {\r\n\r\n  const userId = useSelector((state) => state?.users?.user?.userDetails?.userId ?? 'not Available')\r\n  const [formErr, setErr] = useState({})\r\n  const [isSubmited, setSubmit] = useState(false);\r\n  const [images, setImages] = useState([])\r\n  const [input, setInput] = useState({\r\n    resName: \"\",\r\n    neighborhood: \"\",\r\n    features: \"\",\r\n    foodType: \"\",\r\n    description: \"\",\r\n    location: \"\",\r\n  })\r\n\r\n  const navigate = useNavigate()\r\n  const notify = () => {\r\n    toast.success('Restuarant successfully added  !!!', {\r\n      position: \"top-center\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"light\",\r\n      transition: Bounce,\r\n    });\r\n  };\r\n\r\n  const HandleInputChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setInput({ ...input, [name]: value });\r\n  }\r\n\r\n\r\n\r\n  const validateForm = (values) => {\r\n    const errors = {}\r\n\r\n    const resnamePattern = /^[a-zA-Z ]{5,50}_?[a-zA-Z ]*$/;\r\n    const neighborhoodPattern = /^[a-zA-Z ,\\-/.]{5,100}_?[a-zA-Z ,\\-/.]*$/;\r\n    const featuresPattern = /^[a-zA-Z0-9 ,\\-/.]{5,100}_?[a-zA-Z0-9 ,\\-/.]*$/;\r\n    const foodTypePattern = /^[a-zA-Z ,\\-/.]{1,20}_?[a-zA-Z ,\\-/.]*$/;\r\n    const descriptionPattern = /^[a-zA-Z0-9 ,\\-/.]{5,500}_?[a-zA-Z0-9 ,\\-/.]*$/;\r\n    const locationPattern = /^[a-zA-Z ,\\-/.]{5,50}_?[a-zA-Z ,\\-/.]*$/;\r\n\r\n\r\n\r\n\r\n    if (!values.resName) {\r\n      errors.resName = 'Restuarant name is required'\r\n    }\r\n    else if (!resnamePattern.test(values.resName)) {\r\n      errors.resName = 'Enter 5 to 20 letter'\r\n    }\r\n    if (!values.neighborhood) {\r\n      errors.neighborhood = 'neighborhood is required'\r\n    }\r\n    else if (!neighborhoodPattern.test(values.neighborhood)) {\r\n      errors.neighborhood = 'Enter 5 to 20 letter'\r\n    }\r\n    if (!values.features) {\r\n      errors.features = 'features is required'\r\n    }\r\n    else if (!featuresPattern.test(values.features)) {\r\n      errors.features = 'Enter 5 to 30 letter'\r\n    }\r\n    if (!values.foodType) {\r\n      errors.foodType = 'veg/Nonveg is required'\r\n    }\r\n    else if (!foodTypePattern.test(values.foodType)) {\r\n      errors.foodType = 'Enter 5 to 20 letter'\r\n    }\r\n\r\n    if (!values.description) {\r\n      errors.description = 'description is required'\r\n    }\r\n    else if (!descriptionPattern.test(values.description)) {\r\n      errors.description = 'Enter 5 to 100 letter'\r\n\r\n    }\r\n\r\n\r\n    if (!values.location) {\r\n      errors.location = 'Location is required'\r\n    }\r\n    else if (!locationPattern.test(values.location)) {\r\n      errors.location = 'Enter 5 to 20 letter'\r\n    }\r\n\r\n    return errors\r\n\r\n  }\r\n  const handleImageChange = (index, event) => {\r\n    // const files = event.target.files;\r\n    // setImages(prevImages => [...prevImages, files]);\r\n\r\n    const fileList = Array.from(event.target.files);\r\n\r\n    setImages(prevImages => {\r\n      const updatedImages = [...prevImages];\r\n      updatedImages[index] = fileList;\r\n      return updatedImages;\r\n    });\r\n  }\r\n\r\n\r\n  const addImageField = (e) => {\r\n    e.preventDefault();\r\n    setImages(prevImages => [...prevImages, []]);\r\n\r\n    // const imgWraper = document.getElementById(\"img-field-wraper\");\r\n    // // console.log(imgWraper.children);\r\n    // const newField = document.createElement('input');\r\n    // newField.type = 'file';\r\n    // newField.name = '';\r\n    // newField.accept = \"images/*\";\r\n    // newField.addEventListener('change', imageHandler);\r\n\r\n    // imgWraper.appendChild(newField);\r\n\r\n    // console.log(\"added----\");\r\n  }\r\n  const HandleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setErr(validateForm(input))\r\n    setSubmit(true)\r\n    submitForm()\r\n\r\n  }\r\n\r\n  const submitForm = () => {\r\n    const formData = new FormData();\r\n    formData.append(\"resName\", input.resName);\r\n    formData.append(\"neighborhood\", input.neighborhood);\r\n    formData.append(\"features\", input.features);\r\n    formData.append(\"foodType\", input.foodType);\r\n    formData.append(\"description\", input.description);\r\n    formData.append(\"location\", input.location);\r\n    images.forEach((image) => {\r\n      image.forEach((img) => {\r\n        formData.append('photographs', img)\r\n      })\r\n    });\r\n\r\n\r\n\r\n    if (Object.keys(formErr).length == 0 && isSubmited) {\r\n      try {\r\n        const res = axios.post(`http://localhost:5000/addres/${userId}`, formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\"\r\n          },\r\n          withCredentials: true\r\n\r\n\r\n        })\r\n\r\n        if (res?.data?.success ?? []) {\r\n          notify()\r\n          setTimeout(async () => {\r\n            navigate('/myRes');\r\n          }, 2999);\r\n        }\r\n\r\n      } catch (error) {\r\n        toast.error(error.message, {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n          transition: Bounce,\r\n        });\r\n      }\r\n    }\r\n\r\n    console.log(\"images-------------------->\", images);\r\n\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='addRes'>\r\n      <ToastContainer />\r\n      <form action=\"\" onSubmit={HandleSubmit}>\r\n        <div className='addresSub'>\r\n          <div className='sing-head'>\r\n            <img src={add} alt=\"\" />\r\n            <h1>Add Restaurants</h1>\r\n          </div>\r\n\r\n          <div className='inputSection-main'>\r\n            <label htmlFor=\"\" style={{ 'textAlign': 'center' }}><b> Restuarants name</b></label>\r\n            <div className='input-sec'>\r\n              <img className='iconsLo' src={resImg} alt=\"\" />\r\n              <input type=\"text\"\r\n                onChange={HandleInputChange}\r\n                name='resName'\r\n                value={input.resName}\r\n              />\r\n            </div>\r\n            <span className='error-message'>{formErr.resName}</span>\r\n          </div>\r\n\r\n          <div className='inputSection-main'>\r\n            <label htmlFor=\"\" style={{ 'textAlign': 'center' }}><b> Neighborhood</b></label>\r\n            <div className='input-sec'>\r\n              <img className='iconsLo' src={resNei} alt=\"\" />\r\n              <input type=\"text\"\r\n                onChange={HandleInputChange}\r\n                value={input.neighborhood}\r\n                name='neighborhood'\r\n              />\r\n            </div>\r\n            <span className='error-message'>{formErr.neighborhood}</span>\r\n          </div>\r\n          <div className='inputSection-main'>\r\n            <label htmlFor=\"\" style={{ 'textAlign': 'center' }}><b> Features</b></label>\r\n            <div className='input-sec'>\r\n              <img className='iconsLo' src={resImg} alt=\"\" />\r\n              <input type=\"text\"\r\n                onChange={HandleInputChange}\r\n                value={input.features}\r\n                name='features'\r\n              />\r\n            </div>\r\n            <span className='error-message'>{formErr.features}</span>\r\n          </div>\r\n          <div className='inputSection-main'>\r\n            <label htmlFor=\"\" style={{ 'textAlign': 'center' }}><b> Food Type</b></label>\r\n            <div className='input-sec'>\r\n              <img className='iconsLo' src={vegorNonveg} alt=\"\" />\r\n              <input type=\"text\"\r\n                onChange={HandleInputChange}\r\n                value={input.foodType}\r\n                name='foodType'\r\n\r\n              />\r\n            </div>\r\n            <span className='error-message'>{formErr.foodType}</span>\r\n          </div>\r\n          <div className='inputSection-main'>\r\n            <label htmlFor=\"\" style={{ 'textAlign': 'center' }}><b> Description</b></label>\r\n            <div className='input-sec'>\r\n              <img className='iconsLo' src={desImg} alt=\"\" />\r\n              <input type=\"text\"\r\n                onChange={HandleInputChange}\r\n                value={input.description}\r\n                name='description'\r\n              />\r\n            </div>\r\n            <span className='error-message'>{formErr.description}</span>\r\n          </div>\r\n\r\n          <div className='inputSection-main'>\r\n            <label htmlFor=\"\" style={{ 'textAlign': 'center' }}><b> Location</b></label>\r\n            <div className='input-sec'>\r\n              <img className='iconsLo' src={LocaImg} alt=\"\" />\r\n              <input type=\"text\"\r\n                onChange={HandleInputChange}\r\n                value={input.location}\r\n                name='location'\r\n              />\r\n            </div>\r\n            <span className='error-message'>{formErr.location}</span>\r\n          </div>\r\n\r\n          <div className='inputSection-main'>\r\n            <label htmlFor=\"\" style={{ 'textAlign': 'center' }}><b> Choose  photos</b></label>\r\n            <div className='input-sec'>\r\n              <img className='iconsLo' src={fileImg} alt=\"\" />\r\n\r\n              <div id='img-field-wraper'>\r\n                {images.length <= 3 ? images.map((imageList, index) => (\r\n                  <div key={index}>\r\n                    <input type=\"file\" multiple onChange={(event) => handleImageChange(index, event)} />\r\n                  </div>\r\n                )) : setImages([])}\r\n              </div>\r\n\r\n            </div>\r\n            <Button onClick={addImageField} variant=\"dark\" type='sumit'>Add more</Button>\r\n            <span className='error-message'></span>\r\n          </div>\r\n\r\n\r\n          <div className='endSection'>\r\n            <Button variant=\"dark\" type='sumit'>Upload</Button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n  )\r\n}\r\nexport default Addrestaurant\r\n","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\UserProfile.jsx",[],[],"D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\UpdateRestaurants.jsx",[],[],"D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\UsersList.jsx",["117"],[],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Button from 'react-bootstrap/Button';\r\nimport trushbin from './images/icons8-waste-50.png'\r\n\r\n\r\n\r\n\r\nfunction UsersList() {\r\n\r\n    const [newUser, setNewuser] = useState([])\r\n    const loggedUser = useSelector((state) => state.users.user.userDetails)\r\n    const deleteAccount = async (id) => {\r\n        try {\r\n            const res = await axios.delete(`http://localhost:5000/deleteAccount/${id}`, {\r\n                withCredentials: true\r\n            });\r\n\r\n            if (res.data.success) {\r\n\r\n            } else {\r\n                alert('Account deletion failed.');\r\n            }\r\n        } catch (error) {\r\n            alert(`Error during delete: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    const userLi = async () => {\r\n        try {\r\n            const res = await axios.get(`http://localhost:5000/users`, { withCredentials: true })\r\n            const allusersList = res?.data?.allUsers ?? []\r\n            if (res.data) {\r\n                const newUsers = Array.isArray(allusersList) ? allusersList.filter((newUser) => newUser._id !== loggedUser.userId) : [];\r\n                setNewuser(newUsers);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    }\r\n\r\n    const userHandler = async (id) => {\r\n\r\n        try {\r\n            const res = await axios.put(`http://localhost:5000/userAcive/${id}`, {}, { withCredentials: true });\r\n            if (res.data.success) {\r\n                userLi();\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        userLi();\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className='usersList'>\r\n            <table className='users-table'>\r\n                <tr>\r\n                    <th>User Name</th>\r\n                    <th>Email</th>\r\n                    <th>Status</th>\r\n                    <th>Remove</th>\r\n                </tr>\r\n\r\n\r\n                {newUser && newUser.map((element, index) => (\r\n\r\n                    <tr key={index}>\r\n                        <td>{element.userName}</td>\r\n                        <td>{element.email}</td>\r\n                        <td>\r\n                            <Button onClick={() => userHandler(element._id)} className='active-btn' variant={element.isActive ? 'success' : 'danger'}>\r\n                                {element.isActive ? 'Active' : 'Inactive'}\r\n                            </Button>\r\n                        </td>\r\n                        <td>\r\n                            <img className='trush-bin-userslist' onClick={() => deleteAccount(element._id)} src={trushbin} alt=\"\" />\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersList\r\n","D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\Cards.jsx",["118"],[],"import axios from 'axios';\r\nimport React from 'react'\r\nimport trushbin from './images/icons8-waste-50.png'\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\nfunction Cards({ resName, photographs, neighborhood, location, id }) {\r\n    const userType = useSelector((state) => state?.users?.user?.userDetails?.userType ?? 'Not available');\r\n\r\n    const myLocation = useLocation();\r\n    const navigate = useNavigate()\r\n    const resRemove = async () => {\r\n        try {\r\n            const deleteRes = await axios.delete(`http://localhost:5000/resRemove/${id}`, { withCredentials: true });\r\n            if (deleteRes.data.success) {\r\n                navigate('/')\r\n            }\r\n        } catch (error) {\r\n            alert(error.message);\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <div className='card-child'>\r\n                <Card style={{ width: '18rem', display: 'flex', alignItems: 'center' ,position:'relative'}}>\r\n                  \r\n                    <Card.Img className='card-img' variant=\"top\" src={`${process.env.REACT_APP_SERVER_URL}${photographs[0]}`} />\r\n                    <Card.Body>\r\n                        <Card.Title>\r\n                            <p style={{ textAlign: 'center' }}>\r\n                                {resName}\r\n                            </p>\r\n                        </Card.Title>\r\n                        <Card.Text>\r\n                            <ul className='card-cnt'>\r\n                                <li>Neighborhood:{neighborhood}</li>\r\n                                <li>Location:{location}</li>\r\n                            </ul>\r\n                        </Card.Text>\r\n\r\n                        <div className='card-button'>\r\n                            <Button variant=\"dark\" as={Link} to={`/restuarantdetais/${id}`}>\r\n                                SEE MORE\r\n                            </Button>\r\n                            {(myLocation.pathname === '/myRes' || userType === 'admin') && (\r\n                                <Button variant=\"info\" as={Link} to={`/updateres/${id}`}>\r\n                                    Edit\r\n                                </Button>\r\n                            )}\r\n                        </div>\r\n                        {(myLocation.pathname === '/myRes' || userType === 'admin') && (\r\n                            <div className='remove-btm'>\r\n                                  <img className='trush-bin' src={trushbin} alt=\"\" />\r\n                            </div>\r\n                        )}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n",["119","120","121","122","123","124"],"D:\\BIXEL\\Node-js Express\\retaurants-dianamic\\frontend\\src\\componetns\\Riviewsection.jsx",["125"],[],"import React, { useState } from 'react'\r\nimport \"./style.css\"\r\n\r\nfunction Riviewsection() {\r\n   \r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Riviewsection\r\n",{"ruleId":"126","severity":1,"message":"127","line":5,"column":21,"nodeType":"128","messageId":"129","endLine":5,"endColumn":29},{"ruleId":"130","severity":1,"message":"131","line":23,"column":8,"nodeType":"132","endLine":23,"endColumn":10,"suggestions":"133"},{"ruleId":"126","severity":1,"message":"134","line":23,"column":11,"nodeType":"128","messageId":"129","endLine":23,"endColumn":26},{"ruleId":"126","severity":1,"message":"135","line":38,"column":11,"nodeType":"128","messageId":"129","endLine":38,"endColumn":17},{"ruleId":"130","severity":1,"message":"136","line":18,"column":8,"nodeType":"132","endLine":18,"endColumn":10,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":164,"column":37,"nodeType":"140","messageId":"141","endLine":164,"endColumn":39},{"ruleId":"130","severity":1,"message":"142","line":57,"column":8,"nodeType":"132","endLine":57,"endColumn":10,"suggestions":"143"},{"ruleId":"126","severity":1,"message":"144","line":17,"column":11,"nodeType":"128","messageId":"129","endLine":17,"endColumn":20},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"126","severity":1,"message":"127","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["157"],"'yourInlineStyle' is assigned a value but never used.","'isAuth' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMyrestaurants'. Either include it or remove the dependency array.",["158"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'userLi'. Either include it or remove the dependency array.",["159"],"'resRemove' is assigned a value but never used.","dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["160"],"no-whitespace-before-property",[],"rest-spread-spacing",[],{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"no-object-constructor","Update the dependencies array to be: [dispatch]",{"range":"167","text":"168"},"Update the dependencies array to be: [getMyrestaurants]",{"range":"169","text":"170"},"Update the dependencies array to be: [userLi]",{"range":"171","text":"172"},[845,847],"[dispatch]",[694,696],"[getMyrestaurants]",[1765,1767],"[userLi]"]