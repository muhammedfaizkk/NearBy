{"ast":null,"code":"var _jsxFileName = \"D:\\\\faiz\\\\BIXEL\\\\Node-js Express\\\\retaurants-dianamic\\\\frontend\\\\src\\\\componetns\\\\UsersList.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllusers } from '../redux/userSlice';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UsersList() {\n  _s();\n  const [userStatus, setUserStatus] = useState({}); // State to manage user statuses\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const users = useSelector(state => {\n    var _state$users$users, _state$users;\n    return (_state$users$users = state === null || state === void 0 ? void 0 : (_state$users = state.users) === null || _state$users === void 0 ? void 0 : _state$users.users) !== null && _state$users$users !== void 0 ? _state$users$users : [];\n  });\n  const loggedUser = useSelector(state => state.users.user.userDetails);\n  const deleteAccount = async id => {\n    try {\n      const res = await axios.delete(`http://localhost:5000/deleteAccount/${id}`, {\n        withCredentials: true\n      });\n      if (res.data.success) {} else {\n        alert('Account deletion failed.');\n      }\n    } catch (error) {\n      alert(`Error during delete: ${error.message}`);\n    }\n  };\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const res = await axios.get(`http://localhost:5000/users`, {\n          withCredentials: true\n        });\n        if (res.data) {\n          var _res$data$allUsers, _res$data;\n          const allUsers = (_res$data$allUsers = res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.allUsers) !== null && _res$data$allUsers !== void 0 ? _res$data$allUsers : [];\n          const initialStatus = {};\n          allUsers.forEach(user => {\n            initialStatus[user._id] = user.isActive; // Initialize status based on user data\n          });\n\n          setUserStatus(initialStatus);\n          dispatch(getAllusers(allUsers));\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchUsers();\n  }, [dispatch]);\n  const handleStatusToggle = userId => {\n    setUserStatus(prevStatus => ({\n      ...prevStatus,\n      [userId]: !prevStatus[userId]\n    }));\n  };\n  const newUsers = Array.isArray(users) ? users.filter(newUser => newUser._id !== loggedUser.userId) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"usersList\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"users-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: newUsers.map(element => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: element.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: element.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n              id: `toggle-${element._id}`,\n              type: \"checkbox\",\n              variant: userStatus[element._id] ? 'outline-success' : 'outline-danger',\n              checked: userStatus[element._id] || false,\n              onChange: () => handleStatusToggle(element._id),\n              children: userStatus[element._id] ? 'Active' : 'Inactive'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => deleteAccount(element._id),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)]\n        }, element._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(UsersList, \"AAPYdynGO85qUflS9jQm+Lc72xg=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n_c = UsersList;\nexport default UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["axios","React","useEffect","useState","useDispatch","useSelector","getAllusers","Link","useNavigate","Button","ToggleButton","jsxDEV","_jsxDEV","UsersList","_s","userStatus","setUserStatus","dispatch","navigate","users","state","_state$users$users","_state$users","loggedUser","user","userDetails","deleteAccount","id","res","delete","withCredentials","data","success","alert","error","message","fetchUsers","get","_res$data$allUsers","_res$data","allUsers","initialStatus","forEach","_id","isActive","console","handleStatusToggle","userId","prevStatus","newUsers","Array","isArray","filter","newUser","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","element","userName","email","type","variant","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/faiz/BIXEL/Node-js Express/retaurants-dianamic/frontend/src/componetns/UsersList.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllusers } from '../redux/userSlice';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\n\r\nfunction UsersList() {\r\n    const [userStatus, setUserStatus] = useState({}); // State to manage user statuses\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const users = useSelector((state) => state?.users?.users ?? []);\r\n    const loggedUser = useSelector((state) => state.users.user.userDetails);\r\n\r\n    const deleteAccount = async (id) => {\r\n        try {\r\n            const res = await axios.delete(`http://localhost:5000/deleteAccount/${id}`, {\r\n                withCredentials: true,\r\n            });\r\n\r\n            if (res.data.success) {\r\n              \r\n            } else {\r\n                alert('Account deletion failed.');\r\n            }\r\n        } catch (error) {\r\n            alert(`Error during delete: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const res = await axios.get(`http://localhost:5000/users`, { withCredentials: true });\r\n                if (res.data) {\r\n                    const allUsers = res?.data?.allUsers ?? [];\r\n                    const initialStatus = {};\r\n                    allUsers.forEach((user) => {\r\n                        initialStatus[user._id] = user.isActive; // Initialize status based on user data\r\n                    });\r\n                    setUserStatus(initialStatus);\r\n                    dispatch(getAllusers(allUsers));\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n        fetchUsers();\r\n    }, [dispatch]);\r\n\r\n    const handleStatusToggle = (userId) => {\r\n        setUserStatus((prevStatus) => ({\r\n            ...prevStatus,\r\n            [userId]: !prevStatus[userId],\r\n        }));\r\n    };\r\n\r\n    const newUsers = Array.isArray(users) ? users.filter((newUser) => newUser._id !== loggedUser.userId) : [];\r\n\r\n    return (\r\n        <div className='usersList'>\r\n            <table className='users-table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>User Name</th>\r\n                        <th>Email</th>\r\n                        <th>Status</th>\r\n                        <th>Remove</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {newUsers.map((element) => (\r\n                        <tr key={element._id}>\r\n                            <td>{element.userName}</td>\r\n                            <td>{element.email}</td>\r\n                            <td>\r\n                                <ToggleButton\r\n                                    id={`toggle-${element._id}`}\r\n                                    type='checkbox'\r\n                                    variant={userStatus[element._id] ? 'outline-success' : 'outline-danger'}\r\n                                    checked={userStatus[element._id] || false}\r\n                                    onChange={() => handleStatusToggle(element._id)}\r\n                                >\r\n                                    {userStatus[element._id] ? 'Active' : 'Inactive'}\r\n                                </ToggleButton>\r\n                            </td>\r\n                            <td>\r\n                                <Button variant='danger' onClick={() => deleteAccount(element._id)}>\r\n                                    Remove\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UsersList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}