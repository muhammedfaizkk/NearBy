{"ast":null,"code":"var _jsxFileName = \"D:\\\\faiz\\\\BIXEL\\\\Node-js Express\\\\retaurants-dianamic\\\\frontend\\\\src\\\\componetns\\\\UsersList.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllusers } from '../redux/userSlice';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Button from 'react-bootstrap/Button';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UsersList() {\n  _s();\n  const [checked, setChecked] = useState(false);\n  const [activeStates, setActiveStates] = useState({});\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const users = useSelector(state => {\n    var _state$users$users, _state$users;\n    return (_state$users$users = state === null || state === void 0 ? void 0 : (_state$users = state.users) === null || _state$users === void 0 ? void 0 : _state$users.users) !== null && _state$users$users !== void 0 ? _state$users$users : [];\n  });\n  const loggedUser = useSelector(state => state.users.user.userDetails);\n  const deleteAccount = async id => {\n    try {\n      const res = await axios.delete(`http://localhost:5000/adminRemove/${id}`, {\n        withCredentials: true\n      });\n      if (res.data.success) {} else {\n        alert('Account deletion failed.');\n      }\n    } catch (error) {\n      alert(`Error during delete: ${error.message}`);\n    }\n  };\n  useEffect(() => {\n    const userLi = async () => {\n      try {\n        const res = await axios.get(`http://localhost:5000/users`, {\n          withCredentials: true\n        });\n        if (res.data) {\n          var _res$data$allUsers, _res$data;\n          dispatch(getAllusers((_res$data$allUsers = res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.allUsers) !== null && _res$data$allUsers !== void 0 ? _res$data$allUsers : []));\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    userLi();\n  }, [dispatch]);\n  const user = users.find(user => user._id === loggedUser.userId);\n  const newUsers = user.filter(users);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"usersList\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"users-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"User Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), users && users.map((element, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: element.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: element.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n            className: \"mb-2\",\n            id: `toggle-check-${index}`,\n            type: \"checkbox\",\n            variant: \"outline-success\",\n            checked: activeStates[index],\n            onChange: e => {\n              setChecked(e.currentTarget.checked);\n              setActiveStates({\n                ...activeStates,\n                [index]: e.currentTarget.checked\n              });\n            },\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => deleteAccount(element._id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(UsersList, \"ICcoai/DNI4twAA5ay1AhVsX+ew=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n_c = UsersList;\nexport default UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["axios","React","useEffect","useState","useDispatch","useSelector","getAllusers","Link","useNavigate","Button","ToggleButton","jsxDEV","_jsxDEV","UsersList","_s","checked","setChecked","activeStates","setActiveStates","dispatch","navigate","users","state","_state$users$users","_state$users","loggedUser","user","userDetails","deleteAccount","id","res","delete","withCredentials","data","success","alert","error","message","userLi","get","_res$data$allUsers","_res$data","allUsers","console","find","_id","userId","newUsers","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","element","index","userName","email","type","variant","onChange","e","currentTarget","onClick","_c","$RefreshReg$"],"sources":["D:/faiz/BIXEL/Node-js Express/retaurants-dianamic/frontend/src/componetns/UsersList.jsx"],"sourcesContent":["import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAllusers } from '../redux/userSlice'\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\n\r\n\r\n\r\nfunction UsersList() {\r\n    const [checked, setChecked] = useState(false);\r\n    const [activeStates, setActiveStates] = useState({});\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const users = useSelector((state) => state?.users?.users ?? [])\r\n    const loggedUser = useSelector((state) => state.users.user.userDetails)\r\n\r\n    const deleteAccount = async (id) => {\r\n        try {\r\n            const res = await axios.delete(`http://localhost:5000/adminRemove/${id}`, {\r\n                withCredentials: true\r\n            });\r\n\r\n            if (res.data.success) {\r\n\r\n            } else {\r\n                alert('Account deletion failed.');\r\n            }\r\n        } catch (error) {\r\n            alert(`Error during delete: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const userLi = async () => {\r\n            try {\r\n                const res = await axios.get(`http://localhost:5000/users`, { withCredentials: true })\r\n                if (res.data) {\r\n                    dispatch(getAllusers(res?.data?.allUsers ?? []))\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        }\r\n        userLi()\r\n    }, [dispatch])\r\n\r\n    const user = users.find((user) => user._id === loggedUser.userId);\r\n    const newUsers = user.filter((users))\r\n\r\n    return (\r\n        <div className='usersList'>\r\n            <table className='users-table'>\r\n                <tr>\r\n                    <th>User Name</th>\r\n                    <th>Email</th>\r\n                    <th>Status</th>\r\n                    <th>Remove</th>\r\n                </tr>\r\n\r\n\r\n                {users && users.map((element, index) => (\r\n\r\n                    <tr key={index}>\r\n                        <td>{element.userName}</td>\r\n                        <td>{element.email}</td>\r\n                        <td key={index}>\r\n                            <ToggleButton\r\n                                className=\"mb-2\"\r\n                                id={`toggle-check-${index}`}\r\n                                type=\"checkbox\"\r\n                                variant=\"outline-success\"\r\n                                checked={activeStates[index]}\r\n                                onChange={(e) => {\r\n                                    setChecked(e.currentTarget.checked);\r\n                                    setActiveStates({ ...activeStates, [index]: e.currentTarget.checked });\r\n                                }}\r\n                            >\r\n                                Active\r\n                            </ToggleButton>\r\n                        </td>\r\n                        <td><Button variant=\"danger\" onClick={() => deleteAccount(element._id)}>Remove</Button></td>\r\n\r\n                    </tr>\r\n                ))}\r\n\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersList\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIxD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpD,MAAMgB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,KAAK,GAAGhB,WAAW,CAAEiB,KAAK;IAAA,IAAAC,kBAAA,EAAAC,YAAA;IAAA,QAAAD,kBAAA,GAAKD,KAAK,aAALA,KAAK,wBAAAE,YAAA,GAALF,KAAK,CAAED,KAAK,cAAAG,YAAA,uBAAZA,YAAA,CAAcH,KAAK,cAAAE,kBAAA,cAAAA,kBAAA,GAAI,EAAE;EAAA,EAAC;EAC/D,MAAME,UAAU,GAAGpB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACD,KAAK,CAACK,IAAI,CAACC,WAAW,CAAC;EAEvE,MAAMC,aAAa,GAAG,MAAOC,EAAE,IAAK;IAChC,IAAI;MACA,MAAMC,GAAG,GAAG,MAAM9B,KAAK,CAAC+B,MAAM,CAAE,qCAAoCF,EAAG,EAAC,EAAE;QACtEG,eAAe,EAAE;MACrB,CAAC,CAAC;MAEF,IAAIF,GAAG,CAACG,IAAI,CAACC,OAAO,EAAE,CAEtB,CAAC,MAAM;QACHC,KAAK,CAAC,0BAA0B,CAAC;MACrC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZD,KAAK,CAAE,wBAAuBC,KAAK,CAACC,OAAQ,EAAC,CAAC;IAClD;EACJ,CAAC;EAEDnC,SAAS,CAAC,MAAM;IACZ,MAAMoC,MAAM,GAAG,MAAAA,CAAA,KAAY;MACvB,IAAI;QACA,MAAMR,GAAG,GAAG,MAAM9B,KAAK,CAACuC,GAAG,CAAE,6BAA4B,EAAE;UAAEP,eAAe,EAAE;QAAK,CAAC,CAAC;QACrF,IAAIF,GAAG,CAACG,IAAI,EAAE;UAAA,IAAAO,kBAAA,EAAAC,SAAA;UACVtB,QAAQ,CAACb,WAAW,EAAAkC,kBAAA,GAACV,GAAG,aAAHA,GAAG,wBAAAW,SAAA,GAAHX,GAAG,CAAEG,IAAI,cAAAQ,SAAA,uBAATA,SAAA,CAAWC,QAAQ,cAAAF,kBAAA,cAAAA,kBAAA,GAAI,EAAE,CAAC,CAAC;QACpD;MACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACZO,OAAO,CAACP,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC;IACDE,MAAM,CAAC,CAAC;EACZ,CAAC,EAAE,CAACnB,QAAQ,CAAC,CAAC;EAEd,MAAMO,IAAI,GAAGL,KAAK,CAACuB,IAAI,CAAElB,IAAI,IAAKA,IAAI,CAACmB,GAAG,KAAKpB,UAAU,CAACqB,MAAM,CAAC;EACjE,MAAMC,QAAQ,GAAGrB,IAAI,CAACsB,MAAM,CAAE3B,KAAM,CAAC;EAErC,oBACIT,OAAA;IAAKqC,SAAS,EAAC,WAAW;IAAAC,QAAA,eACtBtC,OAAA;MAAOqC,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BtC,OAAA;QAAAsC,QAAA,gBACItC,OAAA;UAAAsC,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClB1C,OAAA;UAAAsC,QAAA,EAAI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACd1C,OAAA;UAAAsC,QAAA,EAAI;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACf1C,OAAA;UAAAsC,QAAA,EAAI;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,EAGJjC,KAAK,IAAIA,KAAK,CAACkC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAE/B7C,OAAA;QAAAsC,QAAA,gBACItC,OAAA;UAAAsC,QAAA,EAAKM,OAAO,CAACE;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3B1C,OAAA;UAAAsC,QAAA,EAAKM,OAAO,CAACG;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxB1C,OAAA;UAAAsC,QAAA,eACItC,OAAA,CAACF,YAAY;YACTuC,SAAS,EAAC,MAAM;YAChBpB,EAAE,EAAG,gBAAe4B,KAAM,EAAE;YAC5BG,IAAI,EAAC,UAAU;YACfC,OAAO,EAAC,iBAAiB;YACzB9C,OAAO,EAAEE,YAAY,CAACwC,KAAK,CAAE;YAC7BK,QAAQ,EAAGC,CAAC,IAAK;cACb/C,UAAU,CAAC+C,CAAC,CAACC,aAAa,CAACjD,OAAO,CAAC;cACnCG,eAAe,CAAC;gBAAE,GAAGD,YAAY;gBAAE,CAACwC,KAAK,GAAGM,CAAC,CAACC,aAAa,CAACjD;cAAQ,CAAC,CAAC;YAC1E,CAAE;YAAAmC,QAAA,EACL;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAc;QAAC,GAbVG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcV,CAAC,eACL1C,OAAA;UAAAsC,QAAA,eAAItC,OAAA,CAACH,MAAM;YAACoD,OAAO,EAAC,QAAQ;YAACI,OAAO,EAAEA,CAAA,KAAMrC,aAAa,CAAC4B,OAAO,CAACX,GAAG,CAAE;YAAAK,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAlBvFG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoBV,CACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACxC,EAAA,CAjFQD,SAAS;EAAA,QAIGT,WAAW,EACXI,WAAW,EACdH,WAAW,EACNA,WAAW;AAAA;AAAA6D,EAAA,GAPzBrD,SAAS;AAmFlB,eAAeA,SAAS;AAAA,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}